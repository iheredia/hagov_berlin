HAA_IDS=(
  "7vfz5ORpcVw"
  "wrJ0PCNAfj8"
  "wmoLOba94p8"
  "EBmJyhkRGus"
  "DfMtBuVsXjw"
  "FzzL40u0KpU"
  "zuH7o8TIuD0"
  "CyGd2g1Mz7o"
  "PVOfvZBWmB0"
  "QCxb0dw2Jk4"
  "lCZXQz4jRcQ"
  "JibgP_-B6Rc"
  "RG7-KmtV8wo"
  "7baSxMmjvho"
  "5S_5oiV-SzA"
  "aN3FEWETf7M"
  "o0h4LJHLwV4"
  "ELLVpmovrJE"
  "4oXdnV5HlQk"
  "cFVPKm006Ak"
  "KSzCnpInqnw"
  "NqfplH77ves"
  "OHT3QrNK1KI"
  "V7ovsvkV25o"
  "u30e4MteGEo"
  "Q8TeaVq-r9M"
  "qWpVvM1KbTw"
  "DRNz79WFONo"
  "Geq4v3yFzgs"
  "Yl_lRAMbbGw"
  "u2_xBfVdoHk"
  "mAoVU78ECks"
  "6FSm1dE2hAc"
  "IuqXauFtlTo"
  "hvNJbtCh2xw"
  "kNNfQmnQQKY"
  "A_8NziL7k4M"
  "dBeHpKLDlqI"
  "0fLVDJpBDnE"
  "vsoIfn7jP-s"
  "qfBtw6r0Dvc"
  "i4Dc-Dfcz_8"
  "Vh-zyctnVm8"
  "pz9Apt_-kvw"
  "BhrGn0-5eVA"
  "Mh8slk-kqec"
  "vQIgtSe1V60"
  "wcqu5cxUr9U"
  "AQ_0vEvVSJQ"
  "3D9vsTkm4tc"
  "tY7HcY7Y3W8"
  "pt3ryYd14Yw"
  "5Zh1S6bzZhc"
  "TNAfFaPwws8"
  "BSmYmbRh1Yc"
  "DLZA3lr_ShE"
  "B0q5WWIJ5f8"
  "FEc_y_pG2RQ"
  "zzegqF5iUsc"
  "V4QyoafevQY"
  "woTEIc-yl9I"
  "0IlV0qqD0rw"
  "Ge-o5ALg_H0"
  "o4RNESbH_Rw"
  "e4aNkKlxy10"
  "ULsIeWJ7QX0"
  "lA-_vot6XZQ"
  "wuhgeidj7Zw"
  "x2H4IITp4Mg"
  "mEWKmsIM3vY"
  "kajinpZ3hQc"
  "AAMkMY3OgM8"
  "ESg078LophY"
  "zveyDKRELFI"
  "6Faj8fPbxIw"
  "ENKKgdQOM9M"
  "LM_pg4nUsOE"
  "OOGIhEUfsxY"
  "nIhaWtpcG5Q"
  "cTbfqkMvBNk"
  "yjR980qrzh8"
  "VZz237x9A20"
  "Matto0I0Du8"
)

HYF_IDS=(
  "c3c0TD5Xuyc"
  "1cfYNfr6gGQ"
  "Tz2Wa0sQY64"
  "n5CRo6nhT90"
  "cuVSV6PUjiQ"
  "J_Yh8n-rgug"
  "z41BqGsHB3s"
  "dijcVImS3oY"
  "Bc2gaxc3CaA"
  "R4b-k2NFVj0"
  "4jUj-hsrPrk"
  "KMmf-nYsulg"
  "hI_vZQLD7mU"
  "ml3Hl28yBV4"
  "xF7OsSZL99A"
  "2qnSXGWSV1U"
  "UcKoFTjWjLE"
  "n5TL1eIicdI"
  "EACUba7YcSY"
  "U9c_UXVlZLU"
  "jRXC6g0OvKQ"
  "mFCvJKNEzpQ"
  "Qv4r0vob3ww"
  "2pF5IqJLgrI"
  "qCDzWgKpDVM"
  "SDB3y0fNsXs"
  "HnAp_UzLbyQ"
  "m2j3eya5G9Q"
  "9PFlNhxpmiA"
  "Ad6KauUqm98"
  "PqKM_rLjeB4"
  "I3ELhfpYKdw"
  "SfUkXchXG6U"
  "CV-hxqu3jtg"
  "DLnsAK9S1VI"
  "7E4zN5Fe7eQ"
  "8zhyijq9Hpc"
  "W0CjboscnkA"
  "q8U09r0rzpg"
  "liAMqosuMtw"
  "nRHeZk4TWOc"
  "cazhD-Orup0"
  "9ECu5gWe-XE"
  "6E9OHaerLF4"
  "txMwazqncG0"
  "xMHZGaCjkK8"
  "vSzyqRgcCJs"
  "XKlS-l1SrB0"
  "npyYN0EbHLs"
  "iIdau1i-u_s"
  "VDLiCM-huYg"
  "sIWJ38c0BvA"
)


for VIDEO_ID in $HAA_IDS; do
  VIDEO_URL="https://www.youtube.com/watch?v=$VIDEO_ID"

  SUBTITLE_FILENAME="./subtitles_haa_raw/$VIDEO_ID.es.srt"
  if [ -f "$SUBTITLE_FILENAME" ]; then
    echo "Skiping subtitle file for $VIDEO_ID"
  else
    yt-dlp "$VIDEO_URL" --skip-download --write-auto-sub --sub-lang "es" --sub-format srt --output "./subtitles_haa_raw/$VIDEO_ID"
  fi
done

for VIDEO_ID in $HYF_IDS; do
  VIDEO_URL="https://www.youtube.com/watch?v=$VIDEO_ID"

  SUBTITLE_FILENAME="./subtitles_hyf_raw/$VIDEO_ID.es.srt"
  if [ -f "$SUBTITLE_FILENAME" ]; then
    echo "Skiping subtitle file for $VIDEO_ID"
  else
    yt-dlp "$VIDEO_URL" --skip-download --write-auto-sub --sub-lang "es" --sub-format srt --output "./subtitles_hyf_raw/$VIDEO_ID"
  fi
done

node convert_srt_json.js
